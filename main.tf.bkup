locals {
  owner       = "perlthoughtt"
  module_name = "${var.env}-${local.owner}"
}

module "networking" {
  source          = "G:\\perlthought-project\\perl-core-infra\\project\\modules\\networking"
  env             = var.env
  vpc_cidr        = var.vpc_cidr
  private_subnets = var.private_subnets
  public_subnets  = var.public_subnets
}
module "compute" {
  source = "G:\\perlthought-project\\perl-core-infra\\project\\modules\\compute"
  env    = var.env
  configuration = [
    {
      "instance_name" : "${local.module_name}-frontend-server",
      "ami" : "ami-06489866022e12a14",
      "no_of_instances" : "1",
      "instance_type" : "t2.micro",
      "subnet_id" : module.networking.public_subnets_ids[0],
      "vpc_security_group_ids" : [module.networking.instance_dev_server_sg, module.networking.allow_ssh_pub],
      "public_ip" : "true"
    },
    {
      "instance_name" : "${local.module_name}-backend",
      "ami" : "ami-06489866022e12a14",
      "no_of_instances" : "1",
      "instance_type" : "t2.micro",
      "subnet_id" : module.networking.vpc.private_subnets[1],
      "vpc_security_group_ids" : [module.networking.instance_dev_server_sg],
      "public_ip" : "false"
    }
  ]
}
resource "aws_instance" "vpn_access_server" {
  ami                         = "ami-06489866022e12a14"
  instance_type               = "t2.micro"
  vpc_security_group_ids      = [module.networking.vpn_access_server]
  associate_public_ip_address = true
  subnet_id                   = module.networking.public_subnets_ids[0]
  key_name                    = "${var.keyname}"

  tags = {
    Name = "vpn-access-server"
  }
}
resource "aws_eip" "vpn_access_server" {
  instance = "${aws_instance.vpn_access_server.id}"
  vpc = true
}

